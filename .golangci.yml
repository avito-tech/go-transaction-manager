linters-settings:
  enable-all: true

run:
  skip-dirs:
    - trm/mock
    - trm/manager/mock
    - sql/mock

linters:
  enable:
    - asasalint
    - bodyclose
    - containedctx
    - contextcheck
    - dogsled
    - dupl
    - durationcheck
    - errchkjson
    - errname
    - errorlint
    - execinquery
    - exhaustive
    - exhaustruct
    - exportloopref # https://github.com/kyoh86/exportloopref#whats-this
    - forcetypeassert # https://github.com/gostaticanalysis/forcetypeassert#forcetypeassert
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - goconst
    - gocritic
    - gocyclo
    - godot
    - goerr113
    - gofmt
    - gofumpt
    - goimports
    - gomoddirectives
    - goprintffuncname # https://github.com/jirfag/go-printf-func-name#go-printf-func-name
    - grouper
    - gosec
    - importas
    - interfacebloat
    - ireturn
    - lll
    - makezero # https://github.com/ashanbrown/makezero#purpose
    - misspell
    - nakedret
    - nestif
    - nilerr # https://github.com/gostaticanalysis/nilerr#nilerr
    - nilnil # https://github.com/Antonboom/nilnil#motivation
    - nolintlint # https://github.com/golangci/golangci-lint/blob/master/pkg/golinters/nolintlint/README.md#purpose
    - paralleltest
    - prealloc # https://github.com/alexkohler/prealloc#purpose
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - tagliatelle
    - tparallel # https://github.com/moricho/tparallel
    - unconvert # https://github.com/mdempsky/unconvert#usage
    - unparam
    - usestdlibvars
    - wastedassign
    - whitespace
    - wsl # https://github.com/bombsimon/wsl/blob/master/doc/rules.md

issues:
  exclude-use-default: false
  errcheck:
    check-type-assertions: true
    check-blank: true
  exclude:
    - ST1000 # ST1000: at least one file in a package should have a package comment
  exclude-rules:
    - linters:
        - lll
      source: "^//go:generate "
    - linters:
        - lll
      source: "(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+"
    - linters:
        - lll
      source: "// ?TODO "
    - path: _test\.go
      linters:
        - wsl
      text: "only cuddled expressions if assigning variable or using from line above"
    - path: _test\.go
      linters:
        - revive
      text: "context-keys-type: should not use basic type string as key in context.WithValue"
    - path: _test\.go
      linters:
        - staticcheck
      text: "SA1029: should not use built-in type string as key for value; define your own type to avoid collisions"
    - path: (.+/)?context\.go
      linters:
        - ireturn
    - path: (.+/)?transaction\.go
      linters:
        - ireturn
      source: \) Begin\(ctx
    - path: (.+/)?settings\.go
      linters:
        - ireturn
      source: "(?:EnrichBy|SetPropagation|SetCtxKey|CtxKey|SetCancelable|SetTimeout)"
    - linters:
        - gochecknoglobals
      source: "DefaultCtxGetter"
    - &internal_text
      path: ^internal
      text: "var-naming: don't use an underscore in package name"
    - <<: *internal_text
      text: "package-comments: should have a package comment"
    - <<: *internal_text
      text: "ST1003: should not use underscores in package names"
    - path: (_test\.go|^internal)
      linters:
        - funlen
        - gochecknoglobals
        - goconst
        - gomnd
        - containedctx
        - goerr113
        - errcheck
        - nolintlint
        - forcetypeassert
        - exhaustruct